@inject IClient httpClient
@inject NavigationManager navigationManager
@page "/users/register"
<h3>Component1</h3>

@if (!string.IsNullOrEmpty(message))
 {
       <div class="alert alert-danger">
           <p>@message</p>
       </div>
 }

<div class="card-body">
    <EditForm Model="RegistrationModel" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.Email" />
            <ValidationMessage For="@(()=> RegistrationModel.Email)" />
        </div>

        <div class="form-group">
            <label for="email">First Name</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.FirstName" />
            <ValidationMessage For="@(()=> RegistrationModel.FirstName)" />
        </div>

        <div class="form-group">
            <label for="email">Last Name</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.LastName" />
            <ValidationMessage For="@(()=> RegistrationModel.LastName)" />
        </div>

        <div class="form-group">
            <label for="email">Password</label>
            <InputText class="form-control" type="password" @bind-Value="RegistrationModel.Password" />
            <ValidationMessage For="@(()=> RegistrationModel.Password)" />
        </div>
        <button class="btn btn-primary btn-block" type="submit">Submit</button>
    </EditForm>
</div>

@code {
    UserDto RegistrationModel = new UserDto();
    string message = String.Empty;
    private async Task HandleRegistration()
    {
        RegistrationModel.UserRole = "User";

        try
        {
            await httpClient.RegisterAsync(RegistrationModel);
            navigationManager.NavigateTo("users/login");
        }
        catch (ApiException ex)
        {
            if (ex.StatusCode >= 200 & ex.StatusCode <= 299)
            {
                navigationManager.NavigateTo("users/login");
                return;
            }
            message = ex.Response;
        }
        catch (Exception ex)
        {
        }

    }

}

